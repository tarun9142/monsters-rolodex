{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAAAC,GAAK,OACjB,sBAAKC,UAAW,iBAAhB,UACI,qBAAKC,IAAK,OAAOC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACpB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHjBC,G,MAAW,SAAAR,GAAK,OACrB,qBAAKC,UAAU,YAAf,SAEID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAwBA,QAAUA,GAAtBA,EAAQC,WCLrBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBACCZ,UAAY,SACZa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC2BAG,E,kDA9Bb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACZR,SAAU,GACVS,YAAa,IALH,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,oBAE1C,WAAS,IAAD,SACyBE,KAAKR,MAA7BR,EADD,EACCA,SAASS,EADV,EACUA,YACVQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC9CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAClD,OAEE,sBAAK3B,UAAW,MAAhB,UACA,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAAAiB,GAAM,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WAC1D,cAAC,EAAD,CAAUvB,SAAYiB,W,GAzBVO,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.42eeb9e9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n        <div className= 'card-container'>\r\n            <img alt= 'logo' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n    ","import React from 'react';\r\n\r\nimport {Card} from '../card/card.component';\r\nimport './card-list,styles.css';\r\nexport const CardList = props => (\r\n        <div className='card-list'>\r\n        {\r\n            props.monsters.map(monster => \r\n              <Card key= {monster.id} monster= {monster}/>\r\n            )\r\n          }\r\n        </div>\r\n);\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n    <input \r\n     className = 'search'\r\n     type='search'\r\n     placeholder={placeholder} \r\n     onChange={handleChange}\r\n    />\r\n)","import React , {Component} from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component'\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n     monsters: [],\n     searchField: ''\n    };\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}) );\n  }\n  render(){\n    const {monsters,searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()) );\n    return(\n      \n      <div className= 'App'>\n      <h1>MONSTERS ROLODEX</h1>\n      <SearchBox\n        placeholder='search monsters' \n        handleChange={e => {this.setState({searchField:e.target.value})}}/>\n      <CardList monsters = {filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}